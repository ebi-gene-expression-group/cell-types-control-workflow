profiles {

    standard {
        process.executor = 'local'
    }

    cluster{
        process.executor='lsf'
        process.queue='production-rh74'
        process.clusterOptions = '-R \"select[hname!=\'hx-noah-05-02\']\"'

        executor.queueSize=1000
        executor.perJobMemLimit=false
        executor.exitReadTimeout='100000 sec'
        executor.pollInterval = '5sec'

        conda.cacheDir = "/nfs/production3/ma/home/asolovyev/scmap-workflow/envs"
        conda.createTimeout = "30 min"
    } 
}

params {
    tool_outputs_dir = "$baseDir/data/tools_outputs"
    n_tools = 3 // need to specify number of tools being tested 

    // links to download data 
    data_download{
        run = "True" // must be 'True' or 'False'      
        reference_mat_url = "" 
        reference_barcodes_url = ""
        reference_genes_url = ""
        query_matrix_url = ""
        query_barcodes_url = ""
        query_genes_url = ""
        reference_metadata = "" 
        marker_genes_file = ""
    }

    // contol field names in metadata file 
    metadata{
        barcode_col_name = "" // cell id column 
        ref_label_col_name = "" // reference label column 
        ref_CL_col_name = "" // cell ontology column 
    }
    
    scpred{
        run = "True" // must be 'True' or 'False'
        results_dir = "" // specify output when in nested workflow
        method = "prediction" //must be 'evaluation' or 'prediction'
        training_10x_dir = ""
        prediction_10x_dir = ""
        metadata_file = ""
        
        eigenvalue_plot_path = 'eigenvalue_plot.png'
        train_probs_plot_path = 'train_probs.png'
        prediction_probs_path = 'prediction_probs.png'
        model_predictions_path = 'model_predictions.txt'
        confusion_table_path = 'confusion_table.txt'
        normalised_counts_slot = 'counts'
        cell_id_col_name = ""
        cell_types_col_name = ""
        col_names = "TRUE"
        log_transform = "TRUE"
        model = 'svmRadial' 
    }

    scmap_cluster {
        run = "True" // must be 'True' or 'False'
        results_dir = "" // specify output when in nested workflow
        projection_method = "cluster" //must be 'cell' or 'cluster'
        query_10x_dir = ""
        reference_10x_dir = ""
        reference_metadata = ""
        output_dir_cluster = "$baseDir/data/output_cluster"   
        col_names = "TRUE"
        cell_id_col = ""
        cluster_col = ""
        plot_file = "feature_plot_file.png"
        threshold = 0.1
    }

    scmap_cell{
        run = "True" // must be 'True' or 'False'
        results_dir = "" // specify output when in nested workflow
        projection_method = "cell" //must be 'cell' or 'cluster'
        query_10x_dir = ""
        reference_10x_dir = ""
        reference_metadata = ""
        output_dir_cluster = "$baseDir/data/output_cluster"   
        col_names = "TRUE"
        cell_id_col = ""
        cluster_col = ""
        plot_file = "feature_plot_file.png"
        threshold = 0.1
    }

    garnett {
        run = "False" // must be 'True' or 'False'
        results_dir = "" // specify output when in nested workflow
        ref_10x_dir = ""
        query_10x_dir = ""
        ref_cds_gene_id_type = "SYMBOL"
        query_cds_gene_id_type = "SYMBOL"
        marker_genes = ""
        database = "org.Hs.eg.db"
        marker_gene_id_type = "SYMBOL"
        classifier_gene_type = "ENSEMBL"
        n_outgroups=50
        cell_id_field = "null"
        predicted_cell_type_field = "cluster_ext_type"
    }

    label_analysis{
        run = "True" // must be 'True' or 'False'
        output_dir = "$baseDir/data/label_analysis_output" //output for outer workflow
        input_dir=""
        tool_perf_table="tool_perf_table.tsv"
        cell_anno_table="cell_anno_table.tsv"
        tool_table_pvals="tool_perf_pvals.tsv"
        ref_labels_file="$baseDir/data/test/metadata.tsv"
        ontology_graph="$baseDir/data/cl-basic.obo"
        empirical_dist="empirical_dist.rds"
        num_iter=5
        num_cores=4
        cell_ontology_col = ""
        barcode_col_ref = ""
        label_column_ref = ""
        semantic_sim_metric = ""
    }
}

env { 
    WORK_DIR = "$PWD/work"

    GARNETT_BASE_DIR = ""
    GARNETT_GIT = ""
    GARNETT_GIT_BRANCH = ""
    
    SCPRED_BASE_DIR = "~/dev/scpred-workflow"
    SCPRED_GIT = "https://github.com/ebi-gene-expression-group/scpred-workflow"
    SCPRED_GIT_BRANCH = "add_config"

    SCMAP_BASE_DIR = "~/dev/scmap-workflow"
    SCMAP_GIT = "https://github.com/ebi-gene-expression-group/scmap-workflow"
    SCMAP_GIT_BRANCH = "nested_workflow"

    LABEL_ANALYSIS_BASE_DIR = "~/dev/cell-types-analysis-workflow"
    LABEL_ANALYSIS_GIT = "https://github.com/ebi-gene-expression-group/cell-types-analysis-workflow"
    LABEL_ANALYSIS_GIT_BRANCH = "develop"
}
